Index: venv/pyvenv.cfg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>home = C:\\Users\\nick\\AppData\\Local\\Programs\\Python\\Python37\r\ninclude-system-site-packages = false\r\nversion = 3.7.4\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- venv/pyvenv.cfg	(revision 64974c97ffbb2dcca55bade8281015dd7ac91375)
+++ venv/pyvenv.cfg	(date 1598620609525)
@@ -1,3 +1,3 @@
-home = C:\Users\nick\AppData\Local\Programs\Python\Python37
+home = C:\Users\nickh\AppData\Local\Programs\Python\Python37
 include-system-site-packages = false
-version = 3.7.4
+version = 3.7.9
\ No newline at end of file
Index: .idea/daopi.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.7 (Plotly)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/daopi.iml	(revision 64974c97ffbb2dcca55bade8281015dd7ac91375)
+++ .idea/daopi.iml	(date 1598620674932)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.7 (Plotly)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.7 (daopi2)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: KPIFramework.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pandas as pd\r\nfrom sqlalchemy import create_engine\r\nfrom datetime import timedelta\r\nfrom dateutil.relativedelta import relativedelta\r\n#from datetime import datetime\r\nfrom openpyxl.workbook import Workbook\r\nimport numpy as np\r\n\r\nengine = create_engine('mysql+pymysql://root:Handschoen92@localhost:3306/kpiframework')\r\ndbConnection    = engine.connect()\r\n\r\n#SQL Retrieve data\r\nkeys            = ['d_kpi_id','d_date_id']##,'d_level0_id','d_level1_id','d_level2_id'\r\nFacts           = ['f_kpi_test','f_kpi_CoinGecko']\r\n#Dataframes Fact\r\nf_kpi_test       = pd.read_sql(\"select Numerator,Denominator,d_kpi_id,d_level0_id,d_level1_id,d_level2_id,d_date_id from kpiframework.f_kpi\", dbConnection);\r\nf_kpi_CoinGecko  = pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/f_kpi_CoinGecko.xlsx');\r\nprint(f_kpi_test)\r\nprint(f_kpi_CoinGecko)\r\nf_kpi = pd.concat(Facts)\r\nprint(f_kpi_CoinGecko)\r\n\r\n#Dataframes Dimensions/attributes\r\ntmp_d_kpi       = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/Attributes/d_kpi.xlsx',sheet_name='1')); #, columns=['d_kpi_id', 'KPIName'], index_col=0)\r\nd_kpi           = tmp_d_kpi[['d_kpi_id']]#,'Calculation'\r\nd_date          = pd.read_sql(\"select d_date_id,full_date,d_date_id as int_day,date_name_eu as DayName,replace(calendar_year_month,'-','') as int_month,LAST_DAY(date_name) as LD_Month,concat(calendar_year,' ',month_name) as MonthName,concat(calendar_year,calendar_quarter) \tas int_quarter,MAKEDATE(YEAR(date_name),1)+ INTERVAL QUARTER(date_name) QUARTER - INTERVAL 1 DAY as LD_Quarter,concat('Q',calendar_quarter,' ',calendar_year) as QuarterName,calendar_year as int_year,calendar_year as YearName,LAST_DAY(DATE_ADD(date_name, INTERVAL 12-MONTH(date_name) MONTH)) as LD_Year from dimensionalmodel.d_date\", dbConnection);\r\n##d_level0        = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/Attributes/LEVEL0_Blockchain_Library.xlsx',sheet_name='1'));\r\n##d_level1        = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/Attributes/LEVEL1_ICON_Library.xlsx',sheet_name='1'));\r\n##d_level2        = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/Attributes/LEVEL2_ICON_Library.xlsx',sheet_name='1'));\r\ndf_list         = [f_kpi,d_kpi,d_date]#,d_level0,d_level1,d_level2\r\nGrain           = ['full_date','LD_Month','LD_Quarter','LD_Year']\r\nGrainName       = ['DayName','MonthName','QuarterName','YearName']\r\n\r\n\"\"\"\r\n-Join all reference tables to the dataframe with a loop\r\n-Group by all relevant columns to calculate the numerator and denominator\r\n-Loop through to repeat this for all the grains provided (time-grains)\r\n-Create file for evert grain calculated\r\n\"\"\"\r\n\r\nfor z,o in zip(Grain,GrainName):\r\n    df = df_list[0]\r\n    for i,x in zip(df_list[1:],range(len(keys))):\r\n        df = df.merge(i, on=keys[x])\r\n    #del df['d_date_id']\r\n    dfgrouped = df.groupby(['d_kpi_id','d_level0_id','d_level1_id','d_level2_id',z,o]).agg({'Numerator': ['sum'],'Denominator': ['sum']})  #'Calculation','d_level0_id','d_level1_id','d_level2_id',\r\n    grouped_multiple = dfgrouped.reset_index()\r\n    grouped_multiple.columns = grouped_multiple.columns.droplevel(1)\r\n    grouped_multiple['Grain'] = o\r\n    grouped_multiple.rename(columns={z: 'Period_int'}, inplace=True)\r\n    grouped_multiple.rename(columns={o: 'PeriodName'}, inplace=True)\r\n    #print(dfgrouped)\r\n    #print(df.columns)\r\n    grouped_multiple.to_excel(r'C:/Users/nick/Documents/ICON KPI analytics/KPIFramework_Python_' + str(o) + '.xlsx')\r\n\r\nKPIFrameworkDay     = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/KPIFramework_Python_DayName.xlsx'));\r\nKPIFrameworkMonth   = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/KPIFramework_Python_MonthName.xlsx'));\r\nKPIFrameworkQuarter = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/KPIFramework_Python_QuarterName.xlsx'));\r\nKPIFrameworkYear    = pd.DataFrame(pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/KPIFramework_Python_YearName.xlsx'));\r\n\r\n\"\"\"\r\n-Concatenate the files created in previous step and create a new file with all grains concatenated. Distinguish by filtering on column 'grain'\r\n-Convert period integer to datetime (needed later for visualisation and calculations)\r\n-Calculate an extra column named 'Period in lp' meaning: the data of the previous period. This will be used later to join the numerator and denominator of the previous period\r\n\"\"\"\r\n\r\nKPIFramework    = pd.concat([KPIFrameworkDay, KPIFrameworkMonth,KPIFrameworkQuarter,KPIFrameworkYear])\r\nKPIFramework[\"Period_int\"] = pd.to_datetime(KPIFramework[\"Period_int\"])\r\nKPIFramework['Period_int_lp'] = KPIFramework[['Grain','Period_int']].apply(lambda x: x['Period_int'] + timedelta(days=+7) if x['Grain']=='DayName' else x['Period_int'] + timedelta(days=+365) if x['Grain']=='YearName' else x['Period_int'] + relativedelta(months=+1) if x['Grain']=='MonthName' else x['Period_int'] + relativedelta(months=+3) if x['Grain']=='QuarterName' else x['Period_int'], axis=1)\r\n#['Period_int_lp']\r\n\r\n#print(KPIFramework.columns)\r\n\"\"\"\r\n-Create two row-id's. One is for the dataframe itself and one is manipulated to be used to join\r\n-Create second KPIFramework and only select numerator and denominator with the row_id_lp\r\n-Merge the two ID's to add last period numerator and denominator to existing framework\r\n-Drop unnesseccary columns\r\n-Save file\r\n\"\"\"\r\n\r\nKPIFramework['Row_id'] = KPIFramework.apply(lambda x: x['Period_int'].strftime('%Y%m%d') + str(x['d_kpi_id']) + str(x['d_level0_id']) + str(x['d_level1_id']) + str(x['d_level2_id']) + str(x['Grain']), axis=1)\r\nKPIFramework['Row_id_lp'] = KPIFramework.apply(lambda x: x['Period_int_lp'].strftime('%Y%m%d') + str(x['d_kpi_id']) + str(x['d_level0_id']) + str(x['d_level1_id']) + str(x['d_level2_id']) + str(x['Grain']), axis=1)\r\n\r\nKPIFramework_LP = KPIFramework[['Row_id_lp','Numerator','Denominator']]\r\nKPIFramework = KPIFramework.merge(KPIFramework_LP, how='left',left_on=['Row_id'], right_on=['Row_id_lp'],suffixes = (\"\",\"_LP\"))\r\n\r\nKPIFramework = KPIFramework.drop(columns=['Row_id_lp','Row_id_lp_LP','Row_id','Unnamed: 0'],axis=1)\r\n#print(KPIFramework.columns)\r\n\r\nKPIFramework.to_excel(r'C:/Users/nick/Documents/ICON KPI analytics/KPIFramework_Python.xlsx', index=False)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- KPIFramework.py	(revision 64974c97ffbb2dcca55bade8281015dd7ac91375)
+++ KPIFramework.py	(date 1598622678093)
@@ -6,15 +6,24 @@
 from openpyxl.workbook import Workbook
 import numpy as np
 
-engine = create_engine('mysql+pymysql://root:Handschoen92@localhost:3306/kpiframework')
-dbConnection    = engine.connect()
+import requests
+url ="assets/Attributes/d_kpi.csv"
+r = requests.get(url).content
+print(r)
+
+#engine = create_engine('mysql+pymysql://root:Handschoen92@localhost:3306/kpiframework')
+#dbConnection    = engine.connect()
 
 #SQL Retrieve data
 keys            = ['d_kpi_id','d_date_id']##,'d_level0_id','d_level1_id','d_level2_id'
 Facts           = ['f_kpi_test','f_kpi_CoinGecko']
+
+
 #Dataframes Fact
-f_kpi_test       = pd.read_sql("select Numerator,Denominator,d_kpi_id,d_level0_id,d_level1_id,d_level2_id,d_date_id from kpiframework.f_kpi", dbConnection);
-f_kpi_CoinGecko  = pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/f_kpi_CoinGecko.xlsx');
+#f_kpi_test       = pd.read_sql("select Numerator,Denominator,d_kpi_id,d_level0_id,d_level1_id,d_level2_id,d_date_id from kpiframework.f_kpi", dbConnection);
+f_kpi_test         = pd.read_sql("select Numerator,Denominator,d_kpi_id,d_level0_id,d_level1_id,d_level2_id,d_date_id from kpiframework.f_kpi", dbConnection);
+f_kpi_test         = pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/f_kpi_CoinGecko.xlsx');
+f_kpi_CoinGecko    = pd.read_excel(r'C:/Users/nick/Documents/ICON KPI analytics/f_kpi_CoinGecko.xlsx');
 print(f_kpi_test)
 print(f_kpi_CoinGecko)
 f_kpi = pd.concat(Facts)
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.7 (Plotly)\" project-jdk-type=\"Python SDK\" />\r\n  <component name=\"PyCharmProfessionalAdvertiser\">\r\n    <option name=\"shown\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 64974c97ffbb2dcca55bade8281015dd7ac91375)
+++ .idea/misc.xml	(date 1598620674995)
@@ -1,7 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (Plotly)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (daopi2)" project-jdk-type="Python SDK" />
   <component name="PyCharmProfessionalAdvertiser">
     <option name="shown" value="true" />
   </component>
+  <component name="PyPackaging">
+    <option name="earlyReleasesAsUpgrades" value="true" />
+  </component>
 </project>
\ No newline at end of file
